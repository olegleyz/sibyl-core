openapi: 3.0.0
info:
  title: Sibyl Core API
  version: '1.0'
  description: Core API for Sibyl Numerology Bot
x-amazon-apigateway-cors:
  allowOrigins:
    - '*'
  allowMethods:
    - POST
    - GET
    - PUT
    - DELETE
    - OPTIONS
  allowHeaders:
    - Content-Type
    - Authorization
  maxAge: 3600
x-amazon-apigateway-policy:
  Version: '2012-10-17'
  Statement:
    - Effect: Allow
      Principal:
        AWS: 'arn:aws:iam::557690606021:root'
      Action: 'execute-api:Invoke'
      Resource: '*'
paths:
  /users:
    post:
      summary: Create a new user
      security:
        - AWS_IAM: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                telegram_id:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                profile:
                  type: string
                reading:
                  type: object
                  additionalProperties: true
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              required:
                - telegram_id
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  telegram_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  profile:
                    type: string
                  reading:
                    type: object
                    additionalProperties: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                  - telegram_id
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '409':
          description: User with the same telegram_id already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UsersLambdaArn}/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  '/users/{id}':
    get:
      summary: Get user by UUID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  telegram_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  profile:
                    type: string
                  reading:
                    type: object
                    additionalProperties: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                  - telegram_id
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UsersLambdaArn}/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    put:
      summary: Update user by UUID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                telegram_id:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                profile:
                  type: string
                reading:
                  type: object
                  additionalProperties: true
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              required:
                - telegram_id
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  telegram_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  profile:
                    type: string
                  reading:
                    type: object
                    additionalProperties: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                  - telegram_id
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UsersLambdaArn}/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    delete:
      summary: Delete user by UUID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UsersLambdaArn}/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  '/users/telegram/{telegram_id}':
    get:
      summary: Get user by Telegram ID
      parameters:
        - name: telegram_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  telegram_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  profile:
                    type: string
                  reading:
                    type: object
                    additionalProperties: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                  - telegram_id
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UsersLambdaArn}/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    put:
      summary: Update user by Telegram ID
      parameters:
        - name: telegram_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                telegram_id:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                profile:
                  type: string
                reading:
                  type: object
                  additionalProperties: true
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
              required:
                - telegram_id
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  telegram_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                    format: date
                  profile:
                    type: string
                  reading:
                    type: object
                    additionalProperties: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                  - telegram_id
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UsersLambdaArn}/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
components:
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        telegram_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
          format: date
        profile:
          type: string
        reading:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - telegram_id
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
  securitySchemes:
    AWS_IAM:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
security:
  - AWS_IAM: []
